name: Ubuntu CMake Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      QT_VERSION: 5.15.17
      QT_PREFIX: /opt/Qt/5.15.17/gcc_64
      QT_TMP: /tmp/qt-setup
      QT_CACHE_KEY: QT

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Build Dependencies
        run: |
          sudo sed -i "s/# deb-src/deb-src/" /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get -y build-dep qtbase5-dev
          sudo apt-get install -y \
            build-essential \
            libgl1-mesa-dev \
            libxcb-xinerama0-dev \
            uuid-dev \
            git \
            cmake \
            ninja-build

      - name: Cache Qt Build
        id: qt-cache
        uses: actions/cache@v3
        with:
          path: /opt/Qt/${{ env.QT_VERSION }}
          key: ${{ runner.os }}-${{ env.QT_CACHE_KEY }}-${{ env.QT_VERSION }}

      - name: Build and Install Qt (if not cached)
        if: steps.qt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p $QT_TMP

          # Build qtbase
          wget -qO- "https://download.qt.io/official_releases/qt/${QT_VERSION%.*}/${QT_VERSION}/submodules/qtbase-everywhere-opensource-src-${QT_VERSION}.tar.xz" | tar -xJvC "$QT_TMP"
          cd "$QT_TMP"/qtbase-everywhere-src*

          sed -i "0,/#ifdef __cplusplus/!b;//a#  include <limits>" src/corelib/global/qglobal.h

          ./configure -prefix "$QT_PREFIX" -xcb -opensource -confirm-license -nomake tests -nomake examples
          make -j$(nproc)
          sudo make install

      - name: Build with CMake
        uses: ashutoshvarma/action-cmake-build@master
        with:
          build-dir: ${{ runner.workspace }}/build
          cc: gcc
          cxx: g++
          configure-options: >
            -G Ninja
            -DCMAKE_PREFIX_PATH=${{ env.QT_PREFIX }}
          build-type: Release
